Platinum Kit Version 1-0-4-11
-----------------------------

This kit is composed of modules with the following GIT repository hashes:

Neptune:  a4c751
Platinum:  b10430


original file is PlatinumKit-1-0-4-11_6d419f.zip 
patched for GPAC and WIN64 with the following:

diff -ur PlatinumKit-1-0-4-11_6d419f/Neptune/Source/Core/NptAutomaticCleaner.h PlatinumKit-1-0-4/Neptune/Source/Core/NptAutomaticCleaner.h
--- PlatinumKit-1-0-4-11_6d419f/Neptune/Source/Core/NptAutomaticCleaner.h	2013-07-19 14:32:18 +0000
+++ PlatinumKit-1-0-4/Neptune/Source/Core/NptAutomaticCleaner.h	2014-01-21 13:19:47 +0000
@@ -59,6 +59,13 @@
         }
     };
     static NPT_AutomaticCleaner* GetInstance();
+	/*when used in DLL, the automatic cleaner will likely deadlock on WIN due to DLLMain causing a deadlock the thread state signaling - an explicit shutdown is added to prevent this*/
+    static void Shutdown() {
+        if (Instance) {
+            delete Instance;
+            Instance = NULL;
+        }
+	}
     
     // destructor
     ~NPT_AutomaticCleaner();
diff -ur PlatinumKit-1-0-4-11_6d419f/Neptune/Source/Core/NptStrings.cpp PlatinumKit-1-0-4/Neptune/Source/Core/NptStrings.cpp
--- PlatinumKit-1-0-4-11_6d419f/Neptune/Source/Core/NptStrings.cpp	2013-07-19 14:32:18 +0000
+++ PlatinumKit-1-0-4/Neptune/Source/Core/NptStrings.cpp	2014-01-21 13:25:01 +0000
@@ -1054,7 +1054,7 @@
 
     // shift chars to the left
     char* d = m_Chars;
-    GetBuffer()->SetLength(GetLength()-(s-d));
+    GetBuffer()->SetLength(GetLength() - (int) (s-d) );
     while ((*d++ = *s++)) {};
     return *this;
 }
diff -ur PlatinumKit-1-0-4-11_6d419f/Neptune/Source/System/Bsd/NptBsdSockets.cpp PlatinumKit-1-0-4/Neptune/Source/System/Bsd/NptBsdSockets.cpp
--- PlatinumKit-1-0-4-11_6d419f/Neptune/Source/System/Bsd/NptBsdSockets.cpp	2013-07-19 14:32:18 +0000
+++ PlatinumKit-1-0-4/Neptune/Source/System/Bsd/NptBsdSockets.cpp	2014-01-21 13:24:25 +0000
@@ -770,7 +770,7 @@
 
     // setup the cancel fd
     if (m_Cancellable && timeout) {
-        if ((int)m_CancelFds[1] > max_fd) max_fd = m_CancelFds[1];
+        if ((int)m_CancelFds[1] > max_fd) max_fd = (int)m_CancelFds[1];
         FD_SET(m_CancelFds[1], &read_set);
     }
     
diff -ur PlatinumKit-1-0-4-11_6d419f/Neptune/Source/System/Win32/NptWin32MessageQueue.cpp PlatinumKit-1-0-4/Neptune/Source/System/Win32/NptWin32MessageQueue.cpp
--- PlatinumKit-1-0-4-11_6d419f/Neptune/Source/System/Win32/NptWin32MessageQueue.cpp	2013-07-19 14:32:18 +0000
+++ PlatinumKit-1-0-4/Neptune/Source/System/Win32/NptWin32MessageQueue.cpp	2014-01-21 09:27:29 +0000
@@ -25,6 +25,10 @@
 +---------------------------------------------------------------------*/
 const int NPT_WIN32_MESSAGE_ID_BASE = WM_USER + 9200;
 
+#ifdef _WIN64
+#define	GWL_USERDATA GWLP_USERDATA
+#endif
+
 /*----------------------------------------------------------------------
 |       NPT_Win32WindowMessageQueue
 +---------------------------------------------------------------------*/
--- PlatinumKit-1-0-4-11_6d419f/Platinum/Source/Core/PltDeviceHost.cpp	2013-07-19 14:32:18 +0000
+++ PlatinumKit-1-0-4/Platinum/Source/Core/PltDeviceHost.cpp	2014-01-21 09:29:58 +0000
@@ -627,7 +627,7 @@
             }
           
             // default lease
-            NPT_Int32 timeout = *PLT_Constants::GetInstance().GetDefaultSubscribeLease().AsPointer();
+            NPT_Int32 timeout = (NPT_Int32) *PLT_Constants::GetInstance().GetDefaultSubscribeLease().AsPointer();
 
             // subscription renewed
             // send the info to the service
@@ -650,7 +650,7 @@
             }
 
             // default lease time
-            NPT_Int32 timeout = *PLT_Constants::GetInstance().GetDefaultSubscribeLease().AsPointer();
+            NPT_Int32 timeout = (NPT_Int32) *PLT_Constants::GetInstance().GetDefaultSubscribeLease().AsPointer();
 
             // send the info to the service
             service->ProcessNewSubscription(&m_TaskManager,
